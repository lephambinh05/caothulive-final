rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // YouTube Links - public read, admin write
    match /youtube_links/{document} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // YouTube Channels - public read, admin write
    match /youtube_channels/{document} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Website Links - public read, admin write
    match /website_links/{document} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Downloads - public read, admin write
    match /downloads/{document} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Admins collection - only admin can read/write
    match /admins/{document} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Settings - public read, admin write
    match /settings/{document} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Support messages - anyone can create, admin can read/update
    match /support_messages/{document} {
      allow create: if true;
      allow read, update: if request.auth != null && request.auth.token.admin == true;
    }
    
    // User stats - public read/write for gamification
    match /user_stats/{document} {
      allow read, write: if true;
    }
    
    // User achievements - public read/write for gamification
    match /user_achievements/{document} {
      allow read, write: if true;
    }
    
    // Cached news - public read/write for news caching
    match /cached_news/{document} {
      allow read, write: if true;
    }
    
    // Leaderboard - public read/write for game scores
    match /leaderboard/{document} {
      allow read: if true; // Anyone can read leaderboard
      allow create: if 
        // Validate required fields exist
        request.resource.data.keys().hasAll(['playerName', 'score', 'timeSpent', 'gameType', 'playedAt']) &&
        // Validate data types
        request.resource.data.playerName is string &&
        request.resource.data.score is number &&
        request.resource.data.timeSpent is number &&
        request.resource.data.gameType is string &&
        request.resource.data.playedAt is timestamp &&
        // Validate string lengths
        request.resource.data.playerName.size() > 0 &&
        request.resource.data.playerName.size() <= 50 &&
        // Validate score range
        request.resource.data.score >= 0 &&
        request.resource.data.score <= 1000000 &&
        // Validate time range
        request.resource.data.timeSpent >= 0 &&
        request.resource.data.timeSpent <= 3600; // Max 1 hour
      allow update: if false; // No updates allowed (scores are final)
      allow delete: if false; // No deletion allowed
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}