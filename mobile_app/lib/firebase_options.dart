// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyA1aJN0ZK2XJ7Ye86n6A9gi2Z2o8KoohWg',
    appId: '1:696748829509:android:0a033739d2a44a4d01ac2c',
    messagingSenderId: '696748829509',
    projectId: 'quanly20m',
    storageBucket: 'quanly20m.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDnVr2y-CayvAgfBFzZxtGuz68dQn6249w',
    appId: '1:696748829509:ios:8f3feee2ccdd85ac01ac2c',
    messagingSenderId: '696748829509',
    projectId: 'quanly20m',
    storageBucket: 'quanly20m.firebasestorage.app',
    iosClientId: '696748829509-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com',
    iosBundleId: 'com.quanlylink20m.mobileApp',
  );

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: "AIzaSyDnVr2y-CayvAgfBFzZxtGuz68dQn6249w",
    authDomain: "quanly20m.firebaseapp.com",
    projectId: "quanly20m",
    storageBucket: "quanly20m.firebasestorage.app",
    messagingSenderId: "696748829509",
    appId: "1:696748829509:web:8f3feee2ccdd85ac01ac2c",
    measurementId: "G-961GGE1WT3"
  );
}

/*
HƯỚNG DẪN CẤU HÌNH FIREBASE CHO MOBILE:

1. Truy cập Firebase Console: https://console.firebase.google.com/
2. Tạo dự án mới hoặc chọn dự án có sẵn
3. Thêm app Android:
   - Click "Add app" > "Android"
   - Nhập Android package name (từ android/app/build.gradle)
   - Download google-services.json vào android/app/
   - Copy config values vào FirebaseOptions.android

4. Thêm app iOS:
   - Click "Add app" > "iOS"
   - Nhập iOS bundle ID (từ ios/Runner/Info.plist)
   - Download GoogleService-Info.plist vào ios/Runner/
   - Copy config values vào FirebaseOptions.ios

5. Bật Firestore:
   - Vào Firestore Database
   - Tạo database mới (nếu chưa có)
   - Chọn mode: Test mode (cho development)

6. Cấu hình Android (android/app/build.gradle):
   - Thêm classpath 'com.google.gms:google-services:4.3.15'
   - Thêm apply plugin: 'com.google.gms.google-services'

7. Cấu hình iOS (ios/Podfile):
   - Thêm platform :ios, '12.0'
   - Chạy pod install trong thư mục ios/
*/
